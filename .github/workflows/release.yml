name: Build release

on:
  push:
    tags:
      - '*.*.*'
#   push:
#     branches: [ main ]
#
# For cross-platofrms builds options see
# https://stackoverflow.com/questions/63467662/github-action-define-workflow-level-environment-variable-between-jobs
# https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#setting-an-environment-variable

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ^1.19

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Build
        run: |
          echo "AMD64 build"
          make build_amd64;   mv kpass kpass_linux_amd64

          echo "Darwin build AMD64"
          make build_darwin;  mv kpass kpass_darwin_amd64

          echo "Darwin build ARM64"
          make build_darwin;  mv kpass kpass_darwin_arm64

          echo "Power8 build"
          make build_power8;  mv kpass kpass_linux_power8

          echo "ARM64 build"
          make build_arm64;   mv kpass kpass_linux_arm64

          echo "Windows build AMD64"
          make build_windows; mv kpass kpass_windows_amd64

          echo "Windows build ARM64"
          make build_windows; mv kpass kpass_windows_arm64

          echo "Prepare tar-ball"
          tar cfz ../kpass.tar.gz kpass_*
          cd -

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload cli binaries
        id: upload-kpass-cli
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./kpass.tar.gz
          asset_name: kpass.tar.gz
          asset_content_type: application/octet-stream

      - name: Set upload_url
        id: upload-url
        run: |
          export UPLOAD_URL="${{ steps.create_release.outputs.upload_url }}"
          echo "::set-output name=upload_url::${UPLOAD_URL}"
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
